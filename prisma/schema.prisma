generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Transaction {
  id                  Int           @id @default(autoincrement())
  description         String
  amount              Float
  date                DateTime
  categoryId          Int?
  installments        Int           @default(1)
  cardType            CardType
  bank                Bank          @default(ENPARA) // Set default value for bank
  currency            Currency
  category            Category?     @relation(fields: [categoryId], references: [id])
  isRepayment         Boolean       @default(false)
  fingerprint         String        @unique
  parentTransactionId Int?          @map("parent_transaction_id")
  parentTransaction   Transaction?  @relation("TransactionToSubTransaction", fields: [parentTransactionId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  subTransactions     Transaction[] @relation("TransactionToSubTransaction")

  @@index([categoryId])
  @@index([parentTransactionId])
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  transactions Transaction[]
}

model ChatGptUsage {
  id           Int @id @default(autoincrement())
  count        Int
  total_tokens Int
}

model AssetType {
  id             Int           @id @default(autoincrement())
  name           String
  shortName      String        @unique
  valuationInUSD Float? // Optional valuation in USD
  valuationInTRY Float? // Optional valuation in TRY
  assetCategory  AssetCategory
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  holdings AssetHolding[]

  @@index([valuationInUSD, valuationInTRY])
}

model AssetHolding {
  id          Int             @id @default(autoincrement())
  quantity    Float // Quantity of the asset held
  assetTypeId Int
  assetType   AssetType       @relation(fields: [assetTypeId], references: [id])
  holdingForm HoldingForm // Enum to represent the form (cash, bank account, etc.)
  platform    HoldingPlatform // Enum for the platform
  createdAt   DateTime        @default(now())

  @@index([assetTypeId, holdingForm, platform])
}

enum CardType {
  DEBIT
  CREDIT
  MIXED
}

enum Currency {
  TL
}

enum Bank {
  ENPARA
  YAPI_KREDI
}

enum AssetCategory {
  CURRENCY
  STOCK
  COMMODITY
  OTHER
}

enum HoldingForm {
  CASH
  BANK_ACCOUNT
  INVESTMENT_ACCOUNT
  OTHER
}

enum HoldingPlatform {
  ENPARA
  YAPI_KREDI
  DEEL
  MIDAS
  PHYSICAL // Special identifier for cash holdings
  OTHER // For any other platforms not listed
}
